package Utils;
import io.cucumber.java.eo.Se;
import org.apache.log4j.Logger;

public class Log {
  public static  Logger log= Logger.getLogger(Log.class.getName()); // Logger class should be this "org.apache.log4j.Logger"
    // if you don't see the methods which your class have that you call from, make that object of class public and static, you will see those methods
    // When the test starts, I should print the logs
    // When my test stops, I should print the logs
    // if I want to print any message in between, I should print the logs
    public static void startTestCase(String testCaseName){// this will be printed beginning of your test case
        log.info("******************");
        log.info("******************");
        log.info("********"+testCaseName+"**********");
    }
    public static void endTestCase(String testCaseName){// this will be printed end of your test case
      log.info("############################################");
      log.info("############################################");
      log.info("##############"+testCaseName+"###################");
    }
    public static void info(String message){// this will be printed in middle of your test case
      log.info(message);
    }
    public static void warning(String warning){// this will be printed as a warning in between your test case
      System.out.println(warning);
    }

    /*
    -------------MAVEN LIFECYCLE---------------
 MAVEN LIFECYCLE= This consists of several phase
 What do all maven lifecycle options (phases) do?
 -clean = Removes all the files generated by the previous build (it removed the target folder to get it ready for next test execution)
 -validate = it checks the project is correct and all the necessary information is available (usually developers use ite)
 -compile = compiles the source code of the project
 -test = runs the tests for project (whenever we run test phase, validate and compile phases also executed by automatically)
 -package = packages the compiled code into a distributable format, such as JAR or WAR files
 -verify = runs and check on results of integration tests to ensure quality criteria is met
 -install = installs the package into local repository
 -site = generates documentation for the project (usually developers use ite)
 -deploy = copies the final package to remote repository for sharing with other developers or projects

 which folder contains your dependencies repositories?
 answer=  .m2 folder in Windows C >in users >in mbeya
 simply answer is .m2
     */
  /*
  WHAT THE CUCUMBER CLASS BEFORE THE LAST CLASS TO KNOW HOW TO DOWNLAND MAVEN
  to dowland maven on mac, use this link
  https://www.youtube.com/watch?v=N2aB69xoA3M
  to dowland maven on windows, use this link
  https://maven.apache.org/download.cgi

   */
}
